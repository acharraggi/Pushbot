<xml xmlns="https://developers.google.com/blockly/xml">
<variables>
<variable id="tz}hQ|tOSVV^0+:Zi5d1">colorsAlpha</variable>
<variable id=".Ir!TAW)(SXNr4xJ0.Ap">colors</variable>
<variable id="6!=nb5MeuR5G9d?@nb8R">WHITE_THRESHOLD</variable>
<variable id="W?Z|Vy-]XB3_?|/NkrMi">APPROACH_SPEED</variable>
</variables>
<block type="procedures_defnoreturn" id="WtpyD@tEu+EoY=P9iY,D" deletable="false" x="0" y="0">
<field name="NAME">runOpMode</field>
<comment pinned="false" h="45" w="532">This function is executed when this OpMode is selected from the Driver Station.</comment>
<statement name="STACK">
<block type="comment" id="zw(gr]hf~QQ:P|Oer-ox">
<field name="COMMENT">This OpMode illustrates the concept of driving up to a line and then stopping.</field>
<next>
<block type="comment" id="/VqTAy$Ii85CI(jxN;TG">
<field name="COMMENT">This is a copy of the Java sample program RobotAutoDriveToLine_Linear.java</field>
<next>
<block type="comment" id="M1-PbUt6!dH.Esa]MvLZ">
<field name="COMMENT">The Sensor used here can be a REV Color Sensor V2 or V3.  Make sure the white LED is turned on.</field>
<next>
<block type="comment" id="#h5qe[Jyfm}whTiUVjhR">
<field name="COMMENT">The sensor can be plugged into any I2C port, and must be named "sensor_color" in the active configuration.</field>
<next>
<block type="comment" id="|6a,WF$^0c8uUX}@|?.)">
<field name="COMMENT">---</field>
<next>
<block type="comment" id="F`A[eJtQA]6X^_H#mO|`">
<field name="COMMENT">Depending on the height of your color sensor, you may want to set the sensor "gain".</field>
<next>
<block type="comment" id="7ZV)DoZyKnsM52L|37mE">
<field name="COMMENT">The higher the gain, the greater the reflected light reading will be.</field>
<next>
<block type="comment" id="Lb4+,0OW0*wGI|cjl!:b">
<field name="COMMENT">Use the SensorColor sample in this folder to determine the minimum gain value that provides an</field>
<next>
<block type="comment" id="PMxbWJ_.y}U%x43R6#(]">
<field name="COMMENT">"Alpha" reading of 1.0 when you are on top of the white line.  In this sample, we use a gain of 15</field>
<next>
<block type="comment" id="`O0+Fnsf6zqAS]H)w$FM">
<field name="COMMENT">which works well with a Rev V2 color sensor</field>
<next>
<block type="comment" id="qcA_j6,Y_I6Vz3E:C_#d">
<field name="COMMENT">---</field>
<next>
<block type="comment" id="A(u#iDxT8hH7?}dWc1Eg">
<field name="COMMENT">Setting the correct WHITE_THRESHOLD value is key to stopping correctly.</field>
<next>
<block type="comment" id="Uy*W%T263yTjY$z1UUY=">
<field name="COMMENT">This should be set halfway between the bare-tile, and white-line "Alpha" values.</field>
<next>
<block type="comment" id="YAzn=^_j}])u]p:riv([">
<field name="COMMENT">The reflected light value can be read on the screen once the OpMode has been INIT, but before it is STARTED.</field>
<next>
<block type="comment" id="1w30sR0m5::seDg3Ew0!">
<field name="COMMENT">Move the sensor on and off the white line and note the min and max readings.</field>
<next>
<block type="comment" id="YUW~NKOu0bKoor+bN_07">
<field name="COMMENT">Edit this code to make WHITE_THRESHOLD halfway between the min and max.</field>
<next>
<block type="comment" id="[j,AL~o}#(|U{:)FhH7N">
<field name="COMMENT">---</field>
<next>
<block type="comment" id="Lc#BFtj*NTB48YL;eBl.">
<field name="COMMENT">Put initialization blocks here.</field>
<next>
<block type="comment" id="{$Ad)(Fi/x#Y#V#oTi{F">
<field name="COMMENT">WHITE_THRESHOLD spans between 0.0 - 1.0 from dark to light</field>
<next>
<block type="variables_set" id="Nv5pw^(d?!QW#1q7OCIq">
<field name="VAR" id="6!=nb5MeuR5G9d?@nb8R">WHITE_THRESHOLD</field>
<value name="VALUE">
<block type="math_number" id="dhcdFcS`9t{_jTgeGV.,">
<field name="NUM">0.5</field>
</block>
</value>
<next>
<block type="variables_set" id="0Fv*%664yw#5z_:O)kLs">
<field name="VAR" id="W?Z|Vy-]XB3_?|/NkrMi">APPROACH_SPEED</field>
<value name="VALUE">
<block type="math_number" id="J1j4)1FamtV1$L*.Ti70">
<field name="NUM">0.25</field>
</block>
</value>
<next>
<block type="comment" id="J0|*gqspTq[MCOZ8rXlM">
<field name="COMMENT">To drive forward, most robots need the motor on one side to be reversed, because the axles point in opposite directions.</field>
<next>
<block type="comment" id=".IG^f?%bNzqYvC%p@I~6">
<field name="COMMENT">When run, this OpMode should start both motors driving forward. So adjust these two lines based on your first test drive.</field>
<next>
<block type="comment" id=":oO~y]{l+A~;?)*1Y]+V">
<field name="COMMENT">Note: The settings here assume direct drive on left and right wheels.  Gear Reduction or 90 Deg drives may require direction flips</field>
<next>
<block type="dcMotor_setProperty_Direction" id="!xH.HO`|O,YX]FD76;N.">
<field name="IDENTIFIER">left_driveAsDcMotor</field>
<field name="PROP">Direction</field>
<data>{"IDENTIFIER":"left_drive"}</data>
<value name="VALUE">
<shadow type="dcMotor_typedEnum_direction" id="ONNJ*hJV9fE!{PWf{?Rr">
<field name="DIRECTION">REVERSE</field>
</shadow>
</value>
<next>
<block type="comment" id="LAQz@Yql+Llo!kp@F?ZE">
<field name="COMMENT">If there are encoders connected, switch to RUN_USING_ENCODER mode for greater accuracy</field>
<next>
<block type="dcMotor_setDualProperty_RunMode" id="=)?,jC*2j);S`$Wr6S/q" disabled="true">
<field name="PROP">Mode</field>
<field name="IDENTIFIER1">left_driveAsDcMotor</field>
<field name="IDENTIFIER2">right_driveAsDcMotor</field>
<data>{"IDENTIFIER1":"left_drive","IDENTIFIER2":"right_drive"}</data>
<value name="VALUE1">
<shadow type="dcMotor_typedEnum_runMode" id="JT?~E@omeFpwrjFItMMq">
<field name="RUN_MODE">RUN_USING_ENCODER</field>
</shadow>
</value>
<value name="VALUE2">
<shadow type="dcMotor_typedEnum_runMode" id="6T*XT+qB9VYQ=@Ml1N6K">
<field name="RUN_MODE">RUN_USING_ENCODER</field>
</shadow>
</value>
<next>
<block type="comment" id="(*0SM87slzA%{6_9Xv)K">
<field name="COMMENT">If necessary, turn ON the white LED (if there is no LED switch on the sensor)</field>
<next>
<block type="colorSensor_enableLed_Boolean" id="Qmvb@q%$6C*J;I?RvXn+" disabled="true">
<field name="IDENTIFIER">sensor_colorAsColorSensor</field>
<data>{"IDENTIFIER":"sensor_color"}</data>
<value name="ENABLE">
<shadow type="logic_boolean" id="Rx9bh~`a}x-vEy{,08Ru">
<field name="BOOL">TRUE</field>
</shadow>
</value>
<next>
<block type="comment" id="+ZUca$y_`{6Lw^H?qHKD">
<field name="COMMENT">Some sensors allow you to set your light sensor gain for optimal sensitivity.</field>
<next>
<block type="comment" id="tqLImUT2I={4mEMq]3Kp">
<field name="COMMENT">See the SensorColor sample in this folder for how to determine the optimal gain.</field>
<next>
<block type="comment" id="eRq^S7a[GpirIr{^Z9K:">
<field name="COMMENT">A gain of 15 causes a Rev Color Sensor V2 to produce an Alpha value of 1.0 at about 1.5" above the floor.</field>
<next>
<block type="colorSensor_setProperty_Number" id="7}mG%j69gShi;qquSP{9" disabled="true">
<field name="IDENTIFIER">sensor_colorAsColorSensor</field>
<field name="PROP">Gain</field>
<data>{"IDENTIFIER":"sensor_color"}</data>
<value name="VALUE">
<shadow type="math_number" id="$w@..0MAO%9rjKZ*#AVu">
<field name="NUM">15</field>
</shadow>
</value>
<next>
<block type="comment" id="4.pZ|%1z50NwkB|_3;z#">
<field name="COMMENT">A gain of 30 causes a Rev Color Sensor V3 to produce an Alpha value of 0.95 at about 1.5" above the floor.</field>
<next>
<block type="colorSensor_setProperty_Number" id="VVHt7+a,tvh%@+Y-6YKi">
<field name="IDENTIFIER">sensor_colorAsColorSensor</field>
<field name="PROP">Gain</field>
<data>{"IDENTIFIER":"sensor_color"}</data>
<value name="VALUE">
<shadow type="math_number" id="S*6@s`.ULL,^~#NlZO`3">
<field name="NUM">30</field>
</shadow>
</value>
<next>
<block type="comment" id="s5OnVdC{XEt0bql4dpYI">
<field name="COMMENT">Wait for driver to press PLAY)</field>
<next>
<block type="comment" id="ZgC39@t%d:QZ#3P^T/)t">
<field name="COMMENT">Abort this loop is started or stopped.</field>
<next>
<block type="controls_whileUntil" id="IO~uQ@:,S.tiv{;K!!oX">
<field name="MODE">WHILE</field>
<value name="BOOL">
<block type="linearOpMode_opModeInInit" id="UILE%+6CVF3h/X@bES!T"/>
</value>
<statement name="DO">
<block type="comment" id="!!;r6;ZrQSWsdpS~jhrP">
<field name="COMMENT">Send telemetry message to signify robot waiting;</field>
<next>
<block type="telemetry_addTextData_All" id="]AxAl^_#SL,{dEb@x!z)">
<value name="KEY">
<shadow type="text" id="_SD:Y%O(EBJd=qDHohW~">
<field name="TEXT">Status</field>
</shadow>
</value>
<value name="TEXT">
<shadow type="text" id="ItAWN(hT|7F)WhyL@-ok">
<field name="TEXT">Ready to drive to white line.</field>
</shadow>
</value>
<next>
<block type="comment" id="7DA[jc2V8%x{()L*sek^">
<field name="COMMENT">Display the light level while we are waiting to start</field>
<next>
<block type="telemetry_addTextData_All" id="-O:Q#Qd8O~uC/b1NkExO">
<value name="KEY">
<shadow type="text" id="P?Utdn=H)Dwcc[j7k3$U">
<field name="TEXT">Light Level (0 to 1)</field>
</shadow>
</value>
<value name="TEXT">
<block type="misc_formatNumber_withWidth" id="|(L]XNqmW}u(y;D0bV!L">
<value name="NUMBER">
<shadow type="math_number" id=";a|GWg6A2xjERU`5l~lN">
<field name="NUM">3.14159265</field>
</shadow>
<block type="procedures_callreturn" id="jH:%xox*pH`#+d8VL2lZ">
<mutation name="getBrightness"/>
</block>
</value>
<value name="WIDTH">
<shadow type="math_number" id="y{PK[?y2Iub#Wf-^=66R">
<field name="NUM">4</field>
</shadow>
</value>
<value name="PRECISION">
<shadow type="math_number" id="[jFvb7U@0Xq(,wV%#3c4">
<field name="NUM">2</field>
</shadow>
</value>
</block>
</value>
<next>
<block type="telemetry_update" id="tIJ.%uLPzaz%.E1$P!(s"/>
</next>
</block>
</next>
</block>
</next>
</block>
</next>
</block>
</statement>
<next>
<block type="linearOpMode_waitForStart" id=":`$wN_ci`O;o6P0~.(+g">
<next>
<block type="controls_if" id="}Q?5mbxSO8Di;i!__6[y">
<value name="IF0">
<block type="linearOpMode_opModeIsActive" id=")o%YFX/#9kvv^sgXr4~5"/>
</value>
<statement name="DO0">
<block type="comment" id="(rU-p_T_/B|vExcs}liL">
<field name="COMMENT">Start the robot moving forward, and then begin looking for a white line.</field>
<next>
<block type="dcMotor_setDualProperty_Number" id="7;-o5956vch,3fC0:-oZ">
<field name="PROP">Power</field>
<field name="IDENTIFIER1">left_driveAsDcMotor</field>
<field name="IDENTIFIER2">right_driveAsDcMotor</field>
<data>{"IDENTIFIER1":"left_drive","IDENTIFIER2":"right_drive"}</data>
<value name="VALUE1">
<shadow type="math_number" id="bq3kvBUYR9Z|3=ad;jx$">
<field name="NUM">0</field>
</shadow>
<block type="variables_get" id="2V-@1f4R_}2|}L/;~u^E">
<field name="VAR" id="W?Z|Vy-]XB3_?|/NkrMi">APPROACH_SPEED</field>
</block>
</value>
<value name="VALUE2">
<shadow type="math_number" id="F-3{u{@^5|:XiJCTM(Ld">
<field name="NUM">0</field>
</shadow>
<block type="variables_get" id="!i3o|Xp7c9mdzV-9.Ju5">
<field name="VAR" id="W?Z|Vy-]XB3_?|/NkrMi">APPROACH_SPEED</field>
</block>
</value>
<next>
<block type="comment" id="wuA=p%aX?9#~m:!2Pp!R">
<field name="COMMENT">run until the white line is seen OR the driver presses STOP;</field>
<next>
<block type="controls_whileUntil" id="Pn/)ut5^doCi~tsU/%6C">
<field name="MODE">WHILE</field>
<value name="BOOL">
<block type="logic_operation" id="H]jtyvP{PIq|zed_hsXq">
<field name="OP">AND</field>
<value name="A">
<block type="linearOpMode_opModeIsActive" id=".9%FUA#A?x3pOm!P7.9/"/>
</value>
<value name="B">
<block type="logic_compare" id="X~_3;Yvjj5IUQT^,=wko">
<field name="OP">LT</field>
<value name="A">
<block type="procedures_callreturn" id="i6ny2AR0K#3dT+v@?FIJ">
<mutation name="getBrightness"/>
</block>
</value>
<value name="B">
<block type="variables_get" id="ycM@p#-Pg!4NqA4fYQ4;">
<field name="VAR" id="6!=nb5MeuR5G9d?@nb8R">WHITE_THRESHOLD</field>
</block>
</value>
</block>
</value>
</block>
</value>
<statement name="DO">
<block type="linearOpMode_sleep_Number" id="I*rq7+SX6b~b{zECIvJ_">
<value name="MILLISECONDS">
<shadow type="math_number" id="!_/H|4gYuw0D[3$sSiwt">
<field name="NUM">5</field>
</shadow>
</value>
</block>
</statement>
<next>
<block type="comment" id="nI[ZvNpz_T*4b:^+4Ap+">
<field name="COMMENT">Stop all motors</field>
<next>
<block type="dcMotor_setDualProperty_Number" id="raZ%bS.4}9MOGM,wk=$@">
<field name="PROP">Power</field>
<field name="IDENTIFIER1">left_driveAsDcMotor</field>
<field name="IDENTIFIER2">right_driveAsDcMotor</field>
<data>{"IDENTIFIER1":"left_drive","IDENTIFIER2":"right_drive"}</data>
<value name="VALUE1">
<shadow type="math_number" id="h?~bgqia}tSxCH-rj0za">
<field name="NUM">0</field>
</shadow>
</value>
<value name="VALUE2">
<shadow type="math_number" id="blLT4jYgh_4W/G`;b6Jk">
<field name="NUM">0</field>
</shadow>
</value>
</block>
</next>
</block>
</next>
</block>
</next>
</block>
</next>
</block>
</next>
</block>
</statement>
</block>
</next>
</block>
</next>
</block>
</next>
</block>
</next>
</block>
</next>
</block>
</next>
</block>
</next>
</block>
</next>
</block>
</next>
</block>
</next>
</block>
</next>
</block>
</next>
</block>
</next>
</block>
</next>
</block>
</next>
</block>
</next>
</block>
</next>
</block>
</next>
</block>
</next>
</block>
</next>
</block>
</next>
</block>
</next>
</block>
</next>
</block>
</next>
</block>
</next>
</block>
</next>
</block>
</next>
</block>
</next>
</block>
</next>
</block>
</next>
</block>
</next>
</block>
</next>
</block>
</next>
</block>
</next>
</block>
</next>
</block>
</next>
</block>
</next>
</block>
</next>
</block>
</next>
</block>
</statement>
</block>
<block type="procedures_defreturn" id="wrHyNjy}oNYp,bQy:xep" x="0" y="1885">
<field name="NAME">getBrightness</field>
<comment pinned="false" h="80" w="160">Describe this function...</comment>
<data>{"commentPositionLeft":-40,"commentPositionTop":-105}</data>
<statement name="STACK">
<block type="comment" id="gRVz[zBPCGcmJBM/$yo~">
<field name="COMMENT">to obtain reflected light, read the normalized values from the color sensor.  Return the Alpha channel.</field>
<next>
<block type="variables_set" id="`8p=ky~_M!^e8zjhb6KR">
<field name="VAR" id=".Ir!TAW)(SXNr4xJ0.Ap">colors</field>
<value name="VALUE">
<block type="colorSensor_getNormalizedColors" id="c}:/:zor^ZyK6@lq=rbB">
<field name="IDENTIFIER">sensor_colorAsColorSensor</field>
<data>{"IDENTIFIER":"sensor_color"}</data>
</block>
</value>
<next>
<block type="variables_set" id="WO+3;a$VH,)P`YVv@bq5">
<field name="VAR" id="tz}hQ|tOSVV^0+:Zi5d1">colorsAlpha</field>
<value name="VALUE">
<block type="normalizedColors_getProperty_Number" id="F96D#*a{F-Sa+@j.Ek}{">
<field name="PROP">Alpha</field>
<value name="NORMALIZED_COLORS">
<block type="variables_get" id="9=3DK?RXjNqrDz|ReS/-">
<field name="VAR" id=".Ir!TAW)(SXNr4xJ0.Ap">colors</field>
</block>
</value>
</block>
</value>
</block>
</next>
</block>
</next>
</block>
</statement>
<value name="RETURN">
<block type="variables_get" id="zOApV$sOnbu-BO[(rYJt">
<field name="VAR" id="tz}hQ|tOSVV^0+:Zi5d1">colorsAlpha</field>
</block>
</value>
</block>
</xml>
<?xml version='1.0' encoding='UTF-8' standalone='yes' ?>
<Extra>
<OpModeMeta flavor="AUTONOMOUS" group="" autoTransition="" />
<Enabled value="true" />
</Extra>
